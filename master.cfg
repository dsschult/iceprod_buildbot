# -*- python -*-
# ex: set filetype=python:

import os
import json
import importlib

from buildbot.plugins import *

# This is the dictionary that the buildmaster pays attention to. We also use
# a shorter alias to save typing.
c = BuildmasterConfig = {}

# 'protocols' contains information about protocols which master will use for
# communicating with workers. You must define at least 'port' option that workers
# could connect to your master with this protocol.
# 'port' must match the value configured into the workers (with their
# --master option)
c['protocols'] = {'pb': {'port': 9989}}

####### Locks

locks = {
    'master_lock': util.MasterLock('master_lock'),
    'gpu_lock': util.MasterLock('gpu_lock'),
}

####### Plugins

plugins = {}
for mod in os.listdir('master_cfg_d'):
    if mod.startswith('_'):
        continue
    mod = mod.rsplit('.',1)[0]
    x = importlib.import_module('master_cfg_d.'+mod,package='master_cfg_d')
    print(mod,dir(x))
    plugins[mod] = x

c['workers'] = []
c['change_source'] = []
c['builders'] = []
c['schedulers'] = []

for p in plugins.values():
    if p.config:
        p.config()
        plugin_config = p.config
        for x in ('workers','change_source','builders','schedulers'):
            c[x].extend(plugin_config[x].values())


# add a force scheduler for all the builders
c['schedulers'].append(schedulers.ForceScheduler(
                       name="force",
                       builderNames=[str(b.name) for b in c['builders']]))

####### BUILDBOT SERVICES

# 'services' is a list of BuildbotService items like reporter targets. The
# status of each build will be pushed to these targets. buildbot/reporters/*.py
# has a variety to choose from, like IRC bots.

c['services'] = []

####### PROJECT IDENTITY

# the 'title' string will appear at the top of this buildbot installation's
# home pages (linked to the 'titleURL').

c['title'] = "IceProd Buildbot"
c['titleURL'] = "https://github.com/WIPACrepo/iceprod"

# the 'buildbotURL' string should point to the location where the buildbot's
# internal web server is visible. This typically uses the port number set in
# the 'www' entry below, but with an externally-visible host name which the
# buildbot cannot figure out without some help.

c['buildbotURL'] = "http://localhost:8010/"

# minimalistic config to activate new web UI
c['www'] = dict(port=8010,
                plugins=dict(waterfall_view={}, console_view={}))

####### DB URL

c['db'] = {
    # This specifies what database buildbot uses to store its state.  You can leave
    # this at its default for all but the largest installations.
    'db_url' : "sqlite:///state.sqlite",
}

from pprint import pprint
pprint(c)